{"version":3,"sources":["components/Navbar.js","components/TextBox.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","htmlFor","TextBox","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","toLowerCase","console","log","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","About","myStyle","classNameName","data-bs-parent","defaultProps","App","setMode","Router","body","key","Date","Switch","Route","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.df09e450.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                <button className=\"navbar-toggler collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n    </button> \r\n                <div className=\"navbar-collapse collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\"  aria-current=\"page\" href=\"/\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n                        </li>\r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n  };","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextBox(props) {\r\n    const handleUpClick = ()=>{\r\n        //console.log(\"UpperCase was Clicled\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    const handleLoClick = ()=>{\r\n        //console.log(\"UpperCase was Clicled\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n    const handleClearClick = ()=>{\r\n        //console.log(\"UpperCase was Clicled\" + text);\r\n        let newText = ('');\r\n        setText(newText)\r\n    }\r\n    const handleCopy =()=>{\r\n        console.log(\"Copy me\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n    }\r\n    const handleExtraSpaces=()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\n    const handleOnChnage = (event)=>{\r\n        //console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChnage} style={{backgroundColor: props.mode==='dark'?'#13466e':'white',color: props.mode==='dark'?'white':'#042743' }} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button disabled={text.length===0}className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n            <button disabled={text.length===0}className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button disabled={text.length===0}className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0}className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n        </div>\r\n\r\n        <div className='container my -3'style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text Summary</h2>\r\n            <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length}characters</p>\r\n            <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length}Minutes read</p>\r\n            <h3>Preview</h3>\r\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n        </div>\r\n        </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white'\r\n    // })\r\n\r\n    let myStyle = {\r\n      color: props.mode ==='dark'?'white':'#042743',\r\n      backgroundColor: props.mode === 'dark'?'#042743':'white',\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n  return (\r\n    <div classNameName='container' >\r\n        <h1 style={myStyle}>About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\">\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong> TextAnalysis</strong> gives you a way to analyze your text quickly and efficiently. Be it word count, character count, conversion to Uppercase, Lowercase, Copy Text, etc. \r\n         This is a free character counter tool that provides instant character count & word count statistics for a given text. It reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.\r\n         This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n    \r\n  \r\n      </div>\r\n    </div>\r\n  \r\n  )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextBox from './components/TextBox';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n \nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n\n\n\n  const toggleMode = ()=>{\n    if(mode === \"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n    }\n    else{\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n    }\n  }\n  return (\n    <>\n    <Router>\n    <Navbar title=\"TextAnalysis\" mode={mode} toggleMode={toggleMode} key={new Date()} />\n    <div className=\"container my-3\">\n    <Switch>\n    {/* /users --> Component 1\n        /users/home --> Component 2 */}\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route exact path=\"/\">\n            <TextBox heading=\"Try TextAnalysis - word counter, character counter, remove extra spaces, etc...\" mode={mode}/>\n          </Route>\n    </Switch>\n    </div>\n    </Router>\n    </> \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}